(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
"use strict";function bboxPolygon(e,r){void 0===r&&(r={});var o=Number(e[0]),t=Number(e[1]),u=Number(e[2]),b=Number(e[3]);if(6===e.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var p=[o,t],s=[o,b],i=[u,b],n=[u,t];return helpers_1.polygon([[p,n,i,s,p]],r.properties,{bbox:e,id:r.id})}Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers");exports.default=bboxPolygon;
},{"@turf/helpers":18}],2:[function(require,module,exports){
"use strict";function bbox(e){var t=[1/0,1/0,-1/0,-1/0];return meta_1.coordEach(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta");exports.default=bbox;
},{"@turf/meta":25}],3:[function(require,module,exports){
"use strict";function bearing(e,a,r){if(void 0===r&&(r={}),!0===r.final)return calculateFinalBearing(e,a);var n=invariant_1.getCoord(e),i=invariant_1.getCoord(a),t=helpers_1.degreesToRadians(n[0]),s=helpers_1.degreesToRadians(i[0]),o=helpers_1.degreesToRadians(n[1]),l=helpers_1.degreesToRadians(i[1]),d=Math.sin(s-t)*Math.cos(l),h=Math.cos(o)*Math.sin(l)-Math.sin(o)*Math.cos(l)*Math.cos(s-t);return helpers_1.radiansToDegrees(Math.atan2(d,h))}function calculateFinalBearing(e,a){var r=bearing(a,e);return r=(r+180)%360}Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=bearing;
},{"@turf/helpers":18,"@turf/invariant":4}],4:[function(require,module,exports){
"use strict";function getCoord(e){if(!e)throw new Error("coord is required");if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates;if(Array.isArray(e)&&e.length>=2&&void 0===e[0].length&&void 0===e[1].length)return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function getCoords(e){if(!e)throw new Error("coords is required");if("Feature"===e.type&&null!==e.geometry)return e.geometry.coordinates;if(e.coordinates)return e.coordinates;if(Array.isArray(e))return e;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function containsNumber(e){if(e.length>1&&helpers.isNumber(e[0])&&helpers.isNumber(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return containsNumber(e[0]);throw new Error("coordinates must only contain numbers")}function geojsonType(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function featureOf(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function collectionOf(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function getGeom(e){if(!e)throw new Error("geojson is required");if(void 0!==e.geometry)return e.geometry;if(e.coordinates||e.geometries)return e;throw new Error("geojson must be a valid Feature or Geometry Object")}function getGeomType(){throw new Error("invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType")}function getType(e,r){if(!e)throw new Error((r||"geojson")+" is required");if(e.geometry&&e.geometry.type)return e.geometry.type;if(e.type)return e.type;throw new Error((r||"geojson")+" is invalid")}Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");exports.getCoord=getCoord,exports.getCoords=getCoords,exports.containsNumber=containsNumber,exports.geojsonType=geojsonType,exports.featureOf=featureOf,exports.collectionOf=collectionOf,exports.getGeom=getGeom,exports.getGeomType=getGeomType,exports.getType=getType;
},{"@turf/helpers":18}],5:[function(require,module,exports){
"use strict";function booleanContains(n,o){var t=invariant_1.getGeom(n),e=invariant_1.getGeom(o),i=invariant_1.getType(n),r=invariant_1.getType(o),a=invariant_1.getCoords(n),u=invariant_1.getCoords(o);switch(i){case"Point":switch(r){case"Point":return compareCoords(a,u);default:throw new Error("feature2 "+r+" geometry not supported")}case"MultiPoint":switch(r){case"Point":return isPointInMultiPoint(t,e);case"MultiPoint":return isMultiPointInMultiPoint(t,e);default:throw new Error("feature2 "+r+" geometry not supported")}case"LineString":switch(r){case"Point":return boolean_point_on_line_1.default(e,t,{ignoreEndVertices:!0});case"LineString":return isLineOnLine(t,e);case"MultiPoint":return isMultiPointOnLine(t,e);default:throw new Error("feature2 "+r+" geometry not supported")}case"Polygon":switch(r){case"Point":return boolean_point_in_polygon_1.default(e,t,{ignoreBoundary:!0});case"LineString":return isLineInPoly(t,e);case"Polygon":return isPolyInPoly(t,e);case"MultiPoint":return isMultiPointInPoly(t,e);default:throw new Error("feature2 "+r+" geometry not supported")}default:throw new Error("feature1 "+i+" geometry not supported")}}function isPointInMultiPoint(n,o){var t,e=!1;for(t=0;t<n.coordinates.length;t++)if(compareCoords(n.coordinates[t],o.coordinates)){e=!0;break}return e}function isMultiPointInMultiPoint(n,o){for(var t=0,e=o.coordinates;t<e.length;t++){for(var i=e[t],r=!1,a=0,u=n.coordinates;a<u.length;a++){if(compareCoords(i,u[a])){r=!0;break}}if(!r)return!1}return!0}function isMultiPointOnLine(n,o){for(var t=!1,e=0,i=o.coordinates;e<i.length;e++){var r=i[e];if(boolean_point_on_line_1.default(r,n,{ignoreEndVertices:!0})&&(t=!0),!boolean_point_on_line_1.default(r,n))return!1}return!!t}function isMultiPointInPoly(n,o){for(var t=0,e=o.coordinates;t<e.length;t++){var i=e[t];if(!boolean_point_in_polygon_1.default(i,n,{ignoreBoundary:!0}))return!1}return!0}function isLineOnLine(n,o){for(var t=!1,e=0,i=o.coordinates;e<i.length;e++){var r=i[e];if(boolean_point_on_line_1.default({type:"Point",coordinates:r},n,{ignoreEndVertices:!0})&&(t=!0),!boolean_point_on_line_1.default({type:"Point",coordinates:r},n,{ignoreEndVertices:!1}))return!1}return t}function isLineInPoly(n,o){var t=!1,e=0;if(!doBBoxOverlap(bbox_1.default(n),bbox_1.default(o)))return!1;for(e;e<o.coordinates.length-1;e++){var i=getMidpoint(o.coordinates[e],o.coordinates[e+1]);if(boolean_point_in_polygon_1.default({type:"Point",coordinates:i},n,{ignoreBoundary:!0})){t=!0;break}}return t}function isPolyInPoly(n,o){if("Feature"===n.type&&null===n.geometry)return!1;if("Feature"===o.type&&null===o.geometry)return!1;if(!doBBoxOverlap(bbox_1.default(n),bbox_1.default(o)))return!1;for(var t=invariant_1.getGeom(o).coordinates,e=0,i=t;e<i.length;e++)for(var r=i[e],a=0,u=r;a<u.length;a++){var l=u[a];if(!boolean_point_in_polygon_1.default(l,n))return!1}return!0}function doBBoxOverlap(n,o){return!(n[0]>o[0])&&(!(n[2]<o[2])&&(!(n[1]>o[1])&&!(n[3]<o[3])))}function compareCoords(n,o){return n[0]===o[0]&&n[1]===o[1]}function getMidpoint(n,o){return[(n[0]+o[0])/2,(n[1]+o[1])/2]}var __importDefault=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=__importDefault(require("@turf/bbox")),boolean_point_in_polygon_1=__importDefault(require("@turf/boolean-point-in-polygon")),boolean_point_on_line_1=__importDefault(require("@turf/boolean-point-on-line")),invariant_1=require("@turf/invariant");exports.default=booleanContains,exports.isPointInMultiPoint=isPointInMultiPoint,exports.isMultiPointInMultiPoint=isMultiPointInMultiPoint,exports.isMultiPointOnLine=isMultiPointOnLine,exports.isMultiPointInPoly=isMultiPointInPoly,exports.isLineOnLine=isLineOnLine,exports.isLineInPoly=isLineInPoly,exports.isPolyInPoly=isPolyInPoly,exports.doBBoxOverlap=doBBoxOverlap,exports.compareCoords=compareCoords,exports.getMidpoint=getMidpoint;
},{"@turf/bbox":2,"@turf/boolean-point-in-polygon":9,"@turf/boolean-point-on-line":11,"@turf/invariant":6}],6:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],7:[function(require,module,exports){
"use strict";function booleanOverlap(e,r){if(!e)throw new Error("feature1 is required");if(!r)throw new Error("feature2 is required");var t=invariant_1.getType(e);if(t!==invariant_1.getType(r))throw new Error("features must be of the same type");if("Point"===t)throw new Error("Point geometry not supported");if(new GeojsonEquality({precision:6}).compare(e,r))return!1;var n=0;switch(t){case"MultiPoint":var i=meta_1.coordAll(e),a=meta_1.coordAll(r);i.forEach(function(e){a.forEach(function(r){e[0]===r[0]&&e[1]===r[1]&&n++})});break;case"LineString":case"MultiLineString":meta_1.segmentEach(e,function(e){meta_1.segmentEach(r,function(r){line_overlap_1.default(e,r).features.length&&n++})});break;case"Polygon":case"MultiPolygon":meta_1.segmentEach(e,function(e){meta_1.segmentEach(r,function(r){line_intersect_1.default(e,r).features.length&&n++})})}return n>0}Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta"),invariant_1=require("@turf/invariant"),line_overlap_1=require("@turf/line-overlap"),line_intersect_1=require("@turf/line-intersect"),GeojsonEquality=require("geojson-equality");exports.default=booleanOverlap;
},{"@turf/invariant":8,"@turf/line-intersect":19,"@turf/line-overlap":21,"@turf/meta":25,"geojson-equality":31}],8:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],9:[function(require,module,exports){
"use strict";function booleanPointInPolygon(n,r,o){if(void 0===o&&(o={}),!n)throw new Error("point is required");if(!r)throw new Error("polygon is required");var e=invariant_1.getCoord(n),i=invariant_1.getGeom(r),t=i.type,a=r.bbox,g=i.coordinates;if(a&&!1===inBBox(e,a))return!1;"Polygon"===t&&(g=[g]);for(var u=!1,l=0;l<g.length&&!u;l++)if(inRing(e,g[l][0],o.ignoreBoundary)){for(var f=!1,v=1;v<g[l].length&&!f;)inRing(e,g[l][v],!o.ignoreBoundary)&&(f=!0),v++;f||(u=!0)}return u}function inRing(n,r,o){var e=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var i=0,t=r.length-1;i<r.length;t=i++){var a=r[i][0],g=r[i][1],u=r[t][0],l=r[t][1];if(n[1]*(a-u)+g*(u-n[0])+l*(n[0]-a)==0&&(a-n[0])*(u-n[0])<=0&&(g-n[1])*(l-n[1])<=0)return!o;g>n[1]!=l>n[1]&&n[0]<(u-a)*(n[1]-g)/(l-g)+a&&(e=!e)}return e}function inBBox(n,r){return r[0]<=n[0]&&r[1]<=n[1]&&r[2]>=n[0]&&r[3]>=n[1]}Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");exports.default=booleanPointInPolygon;
},{"@turf/invariant":10}],10:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],11:[function(require,module,exports){
"use strict";function booleanPointOnLine(t,n,e){void 0===e&&(e={});for(var a=invariant_1.getCoord(t),r=invariant_1.getCoords(n),i=0;i<r.length-1;i++){var o=!1;if(e.ignoreEndVertices&&(0===i&&(o="start"),i===r.length-2&&(o="end"),0===i&&i+1===r.length-1&&(o="both")),isPointOnLineSegment(r[i],r[i+1],a,o))return!0}return!1}function isPointOnLineSegment(t,n,e,a){var r=e[0],i=e[1],o=t[0],s=t[1],b=n[0],h=n[1],u=e[0]-o,v=e[1]-s,d=b-o,M=h-s;return 0==u*M-v*d&&(a?"start"===a?Math.abs(d)>=Math.abs(M)?d>0?o<r&&r<=b:b<=r&&r<o:M>0?s<i&&i<=h:h<=i&&i<s:"end"===a?Math.abs(d)>=Math.abs(M)?d>0?o<=r&&r<b:b<r&&r<=o:M>0?s<=i&&i<h:h<i&&i<=s:"both"===a&&(Math.abs(d)>=Math.abs(M)?d>0?o<r&&r<b:b<r&&r<o:M>0?s<i&&i<h:h<i&&i<s):Math.abs(d)>=Math.abs(M)?d>0?o<=r&&r<=b:b<=r&&r<=o:M>0?s<=i&&i<=h:h<=i&&i<=s)}Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");exports.default=booleanPointOnLine;
},{"@turf/invariant":12}],12:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],13:[function(require,module,exports){
"use strict";function center(e,r){void 0===r&&(r={});var t=bbox_1.default(e),o=(t[0]+t[2])/2,u=(t[1]+t[3])/2;return helpers_1.point([o,u],r.properties,r)}Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=require("@turf/bbox"),helpers_1=require("@turf/helpers");exports.default=center;
},{"@turf/bbox":2,"@turf/helpers":18}],14:[function(require,module,exports){
"use strict";function destination(e,s,a,r){void 0===r&&(r={});var t=invariant_1.getCoord(e),i=helpers_1.degreesToRadians(t[0]),n=helpers_1.degreesToRadians(t[1]),h=helpers_1.degreesToRadians(a),o=helpers_1.lengthToRadians(s,r.units),d=Math.asin(Math.sin(n)*Math.cos(o)+Math.cos(n)*Math.sin(o)*Math.cos(h)),p=i+Math.atan2(Math.sin(h)*Math.sin(o)*Math.cos(n),Math.cos(o)-Math.sin(n)*Math.sin(d)),M=helpers_1.radiansToDegrees(p),l=helpers_1.radiansToDegrees(d);return helpers_1.point([M,l],r.properties)}Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=destination;
},{"@turf/helpers":18,"@turf/invariant":15}],15:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],16:[function(require,module,exports){
"use strict";function distance(e,a,r){void 0===r&&(r={});var t=invariant_1.getCoord(e),s=invariant_1.getCoord(a),i=helpers_1.degreesToRadians(s[1]-t[1]),n=helpers_1.degreesToRadians(s[0]-t[0]),o=helpers_1.degreesToRadians(t[1]),d=helpers_1.degreesToRadians(s[1]),h=Math.pow(Math.sin(i/2),2)+Math.pow(Math.sin(n/2),2)*Math.cos(o)*Math.cos(d);return helpers_1.radiansToLength(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r.units)}Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");exports.default=distance;
},{"@turf/helpers":18,"@turf/invariant":17}],17:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],18:[function(require,module,exports){
"use strict";function feature(e,r,t){void 0===t&&(t={});var o={type:"Feature"};return(0===t.id||t.id)&&(o.id=t.id),t.bbox&&(o.bbox=t.bbox),o.properties=r||{},o.geometry=e,o}function geometry(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return point(r).geometry;case"LineString":return lineString(r).geometry;case"Polygon":return polygon(r).geometry;case"MultiPoint":return multiPoint(r).geometry;case"MultiLineString":return multiLineString(r).geometry;case"MultiPolygon":return multiPolygon(r).geometry;default:throw new Error(e+" is invalid")}}function point(e,r,t){return void 0===t&&(t={}),feature({type:"Point",coordinates:e},r,t)}function points(e,r,t){return void 0===t&&(t={}),featureCollection(e.map(function(e){return point(e,r)}),t)}function polygon(e,r,t){void 0===t&&(t={});for(var o=0,n=e;o<n.length;o++){var i=n[o];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<i[i.length-1].length;s++)if(i[i.length-1][s]!==i[0][s])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates:e},r,t)}function polygons(e,r,t){return void 0===t&&(t={}),featureCollection(e.map(function(e){return polygon(e,r)}),t)}function lineString(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return feature({type:"LineString",coordinates:e},r,t)}function lineStrings(e,r,t){return void 0===t&&(t={}),featureCollection(e.map(function(e){return lineString(e,r)}),t)}function featureCollection(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function multiLineString(e,r,t){return void 0===t&&(t={}),feature({type:"MultiLineString",coordinates:e},r,t)}function multiPoint(e,r,t){return void 0===t&&(t={}),feature({type:"MultiPoint",coordinates:e},r,t)}function multiPolygon(e,r,t){return void 0===t&&(t={}),feature({type:"MultiPolygon",coordinates:e},r,t)}function geometryCollection(e,r,t){return void 0===t&&(t={}),feature({type:"GeometryCollection",geometries:e},r,t)}function round(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t}function radiansToLength(e,r){void 0===r&&(r="kilometers");var t=exports.factors[r];if(!t)throw new Error(r+" units is invalid");return e*t}function lengthToRadians(e,r){void 0===r&&(r="kilometers");var t=exports.factors[r];if(!t)throw new Error(r+" units is invalid");return e/t}function lengthToDegrees(e,r){return radiansToDegrees(lengthToRadians(e,r))}function bearingToAzimuth(e){var r=e%360;return r<0&&(r+=360),r}function radiansToDegrees(e){return e%(2*Math.PI)*180/Math.PI}function degreesToRadians(e){return e%360*Math.PI/180}function convertLength(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return radiansToLength(lengthToRadians(e,r),t)}function convertArea(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=exports.areaFactors[r];if(!o)throw new Error("invalid original units");var n=exports.areaFactors[t];if(!n)throw new Error("invalid final units");return e/o*n}function isNumber(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function isObject(e){return!!e&&e.constructor===Object}function validateBBox(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!isNumber(e))throw new Error("bbox must only contain numbers")})}function validateId(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}function radians2degrees(){throw new Error("method has been renamed to `radiansToDegrees`")}function degrees2radians(){throw new Error("method has been renamed to `degreesToRadians`")}function distanceToDegrees(){throw new Error("method has been renamed to `lengthToDegrees`")}function distanceToRadians(){throw new Error("method has been renamed to `lengthToRadians`")}function radiansToDistance(){throw new Error("method has been renamed to `radiansToLength`")}function bearingToAngle(){throw new Error("method has been renamed to `bearingToAzimuth`")}function convertDistance(){throw new Error("method has been renamed to `convertLength`")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.earthRadius=6371008.8,exports.factors={centimeters:100*exports.earthRadius,centimetres:100*exports.earthRadius,degrees:exports.earthRadius/111325,feet:3.28084*exports.earthRadius,inches:39.37*exports.earthRadius,kilometers:exports.earthRadius/1e3,kilometres:exports.earthRadius/1e3,meters:exports.earthRadius,metres:exports.earthRadius,miles:exports.earthRadius/1609.344,millimeters:1e3*exports.earthRadius,millimetres:1e3*exports.earthRadius,nauticalmiles:exports.earthRadius/1852,radians:1,yards:exports.earthRadius/1.0936},exports.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/exports.earthRadius,yards:1/1.0936},exports.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:3.86e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046},exports.feature=feature,exports.geometry=geometry,exports.point=point,exports.points=points,exports.polygon=polygon,exports.polygons=polygons,exports.lineString=lineString,exports.lineStrings=lineStrings,exports.featureCollection=featureCollection,exports.multiLineString=multiLineString,exports.multiPoint=multiPoint,exports.multiPolygon=multiPolygon,exports.geometryCollection=geometryCollection,exports.round=round,exports.radiansToLength=radiansToLength,exports.lengthToRadians=lengthToRadians,exports.lengthToDegrees=lengthToDegrees,exports.bearingToAzimuth=bearingToAzimuth,exports.radiansToDegrees=radiansToDegrees,exports.degreesToRadians=degreesToRadians,exports.convertLength=convertLength,exports.convertArea=convertArea,exports.isNumber=isNumber,exports.isObject=isObject,exports.validateBBox=validateBBox,exports.validateId=validateId,exports.radians2degrees=radians2degrees,exports.degrees2radians=degrees2radians,exports.distanceToDegrees=distanceToDegrees,exports.distanceToRadians=distanceToRadians,exports.radiansToDistance=radiansToDistance,exports.bearingToAngle=bearingToAngle,exports.convertDistance=convertDistance;
},{}],19:[function(require,module,exports){
"use strict";function lineIntersect(e,t){var r={},n=[];if("LineString"===e.type&&(e=helpers_1.feature(e)),"LineString"===t.type&&(t=helpers_1.feature(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length){var i=intersects(e,t);return i&&n.push(i),helpers_1.featureCollection(n)}var o=geojson_rbush_1.default();return o.load(line_segment_1.default(t)),meta_1.featureEach(line_segment_1.default(e),function(e){meta_1.featureEach(o.search(e),function(t){var i=intersects(e,t);if(i){var o=invariant_1.getCoords(i).join(",");r[o]||(r[o]=!0,n.push(i))}})}),helpers_1.featureCollection(n)}function intersects(e,t){var r=invariant_1.getCoords(e),n=invariant_1.getCoords(t);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=r[0][0],o=r[0][1],a=r[1][0],u=r[1][1],s=n[0][0],l=n[0][1],_=n[1][0],f=n[1][1],c=(f-l)*(a-i)-(_-s)*(u-o),g=(_-s)*(o-l)-(f-l)*(i-s),h=(a-i)*(o-l)-(u-o)*(i-s);if(0===c)return null;var p=g/c,m=h/c;if(p>=0&&p<=1&&m>=0&&m<=1){var v=i+p*(a-i),d=o+p*(u-o);return helpers_1.point([v,d])}return null}var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),line_segment_1=__importDefault(require("@turf/line-segment")),meta_1=require("@turf/meta"),geojson_rbush_1=__importDefault(require("geojson-rbush"));exports.default=lineIntersect;
},{"@turf/helpers":18,"@turf/invariant":20,"@turf/line-segment":23,"@turf/meta":25,"geojson-rbush":32}],20:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],21:[function(require,module,exports){
"use strict";function lineOverlap(e,n,t){if(void 0===t&&(t={}),t=t||{},!helpers_1.isObject(t))throw new Error("options is invalid");var r=t.tolerance||0,o=[],i=geojson_rbush_1.default(),a=line_segment_1.default(e);i.load(a);var _;return meta_1.segmentEach(n,function(e){var n=!1;meta_1.featureEach(i.search(e),function(t){if(!1===n){var o=invariant_1.getCoords(e).sort(),i=invariant_1.getCoords(t).sort();equal(o,i)?(n=!0,_=_?concatSegment(_,e):e):(0===r?boolean_point_on_line_1.default(o[0],t)&&boolean_point_on_line_1.default(o[1],t):nearest_point_on_line_1.default(t,o[0]).properties.dist<=r&&nearest_point_on_line_1.default(t,o[1]).properties.dist<=r)?(n=!0,_=_?concatSegment(_,e):e):(0===r?boolean_point_on_line_1.default(i[0],e)&&boolean_point_on_line_1.default(i[1],e):nearest_point_on_line_1.default(e,i[0]).properties.dist<=r&&nearest_point_on_line_1.default(e,i[1]).properties.dist<=r)&&(_=_?concatSegment(_,t):t)}}),!1===n&&_&&(o.push(_),_=void 0)}),_&&o.push(_),helpers_1.featureCollection(o)}function concatSegment(e,n){var t=invariant_1.getCoords(n),r=invariant_1.getCoords(e),o=r[0],i=r[r.length-1],a=e.geometry.coordinates;return equal(t[0],o)?a.unshift(t[1]):equal(t[0],i)?a.push(t[1]):equal(t[1],o)?a.unshift(t[0]):equal(t[1],i)&&a.push(t[0]),e}Object.defineProperty(exports,"__esModule",{value:!0});var geojson_rbush_1=require("geojson-rbush"),line_segment_1=require("@turf/line-segment"),nearest_point_on_line_1=require("@turf/nearest-point-on-line"),boolean_point_on_line_1=require("@turf/boolean-point-on-line"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),equal=require("deep-equal");exports.default=lineOverlap;
},{"@turf/boolean-point-on-line":11,"@turf/helpers":18,"@turf/invariant":22,"@turf/line-segment":23,"@turf/meta":25,"@turf/nearest-point-on-line":26,"deep-equal":28,"geojson-rbush":32}],22:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],23:[function(require,module,exports){
"use strict";function lineSegment(e){if(!e)throw new Error("geojson is required");var r=[];return meta_1.flattenEach(e,function(e){lineSegmentFeature(e,r)}),helpers_1.featureCollection(r)}function lineSegmentFeature(e,r){var t=[],n=e.geometry;if(null!==n){switch(n.type){case"Polygon":t=invariant_1.getCoords(n);break;case"LineString":t=[invariant_1.getCoords(n)]}t.forEach(function(t){createSegments(t,e.properties).forEach(function(e){e.id=r.length,r.push(e)})})}}function createSegments(e,r){var t=[];return e.reduce(function(e,n){var i=helpers_1.lineString([e,n],r);return i.bbox=bbox(e,n),t.push(i),n}),t}function bbox(e,r){var t=e[0],n=e[1],i=r[0],a=r[1];return[t<i?t:i,n<a?n:a,t>i?t:i,n>a?n:a]}Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta");exports.default=lineSegment;
},{"@turf/helpers":18,"@turf/invariant":24,"@turf/meta":25}],24:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],25:[function(require,module,exports){
"use strict";function coordEach(e,t,r){if(null!==e)for(var n,o,i,a,l,u,c,s,g=0,f=0,h=e.type,p="FeatureCollection"===h,d="Feature"===h,y=p?e.features.length:1,m=0;m<y;m++){c=p?e.features[m].geometry:d?e.geometry:e,s=!!c&&"GeometryCollection"===c.type,l=s?c.geometries.length:1;for(var v=0;v<l;v++){var E=0,P=0;if(null!==(a=s?c.geometries[v]:c)){u=a.coordinates;var w=a.type;switch(g=!r||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":if(!1===t(u,f,m,E,P))return!1;f++,E++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===t(u[n],f,m,E,P))return!1;f++,"MultiPoint"===w&&E++}"LineString"===w&&E++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-g;o++){if(!1===t(u[n][o],f,m,E,P))return!1;f++}"MultiLineString"===w&&E++,"Polygon"===w&&P++}"Polygon"===w&&E++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for("MultiPolygon"===w&&(P=0),o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-g;i++){if(!1===t(u[n][o][i],f,m,E,P))return!1;f++}P++}E++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===coordEach(a.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function coordReduce(e,t,r,n){var o=r;return coordEach(e,function(e,n,i,a,l){o=0===n&&void 0===r?e:t(o,e,n,i,a,l)},n),o}function propEach(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function propReduce(e,t,r){var n=r;return propEach(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n}function featureEach(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function featureReduce(e,t,r){var n=r;return featureEach(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n}function coordAll(e){var t=[];return coordEach(e,function(e){t.push(e)}),t}function geomEach(e,t){var r,n,o,i,a,l,u,c,s,g,f=0,h="FeatureCollection"===e.type,p="Feature"===e.type,d=h?e.features.length:1;for(r=0;r<d;r++){for(l=h?e.features[r].geometry:p?e.geometry:e,c=h?e.features[r].properties:p?e.properties:{},s=h?e.features[r].bbox:p?e.bbox:void 0,g=h?e.features[r].id:p?e.id:void 0,u=!!l&&"GeometryCollection"===l.type,a=u?l.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?l.geometries[o]:l))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,f,c,s,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],f,c,s,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,c,s,g))return!1;f++}}function geomReduce(e,t,r){var n=r;return geomEach(e,function(e,o,i,a,l){n=0===o&&void 0===r?e:t(n,e,o,i,a,l)}),n}function flattenEach(e,t){geomEach(e,function(e,r,n,o,i){var a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":if(!1===t(helpers.feature(e,n,{bbox:o,id:i}),r,0))return!1;return}var l;switch(a){case"MultiPoint":l="Point";break;case"MultiLineString":l="LineString";break;case"MultiPolygon":l="Polygon"}for(var u=0;u<e.coordinates.length;u++){var c=e.coordinates[u],s={type:l,coordinates:c};if(!1===t(helpers.feature(s,n),r,u))return!1}})}function flattenReduce(e,t,r){var n=r;return flattenEach(e,function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)}),n}function segmentEach(e,t){flattenEach(e,function(e,r,n){var o=0;if(e.geometry){var i=e.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var a;return!1!==coordEach(e,function(i,l,u,c,s){if(void 0===a)return void(a=i);var g=helpers.lineString([a,i],e.properties);if(!1===t(g,r,n,s,o))return!1;o++,a=i})&&void 0}}})}function segmentReduce(e,t,r){var n=r,o=!1;return segmentEach(e,function(e,i,a,l,u){n=!1===o&&void 0===r?e:t(n,e,i,a,l,u),o=!0}),n}function lineEach(e,t){if(!e)throw new Error("geojson is required");flattenEach(e,function(e,r,n){if(null!==e.geometry){var o=e.geometry.type,i=e.geometry.coordinates;switch(o){case"LineString":if(!1===t(e,r,n,0,0))return!1;break;case"Polygon":for(var a=0;a<i.length;a++)if(!1===t(helpers.lineString(i[a],e.properties),r,n,a))return!1}}})}function lineReduce(e,t,r){var n=r;return lineEach(e,function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)}),n}function findSegment(e,t){if(t=t||{},!helpers.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.segmentIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=u.length+a-1),helpers.lineString([u[a],u[a+1]],l,t);case"Polygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a-1),helpers.lineString([u[i][a],u[i][a+1]],l,t);case"MultiLineString":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a-1),helpers.lineString([u[o][a],u[o][a+1]],l,t);case"MultiPolygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i),a<0&&(a=u[o][i].length-a-1),helpers.lineString([u[o][i][a],u[o][i][a+1]],l,t)}throw new Error("geojson is invalid")}function findPoint(e,t){if(t=t||{},!helpers.isObject(t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.coordIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return helpers.point(u,l,t);case"MultiPoint":return o<0&&(o=u.length+o),helpers.point(u[o],l,t);case"LineString":return a<0&&(a=u.length+a),helpers.point(u[a],l,t);case"Polygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),helpers.point(u[i][a],l,t);case"MultiLineString":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a),helpers.point(u[o][a],l,t);case"MultiPolygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i),a<0&&(a=u[o][i].length-a),helpers.point(u[o][i][a],l,t)}throw new Error("geojson is invalid")}Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");exports.coordEach=coordEach,exports.coordReduce=coordReduce,exports.propEach=propEach,exports.propReduce=propReduce,exports.featureEach=featureEach,exports.featureReduce=featureReduce,exports.coordAll=coordAll,exports.geomEach=geomEach,exports.geomReduce=geomReduce,exports.flattenEach=flattenEach,exports.flattenReduce=flattenReduce,exports.segmentEach=segmentEach,exports.segmentReduce=segmentReduce,exports.lineEach=lineEach,exports.lineReduce=lineReduce,exports.findSegment=findSegment,exports.findPoint=findPoint;
},{"@turf/helpers":18}],26:[function(require,module,exports){
"use strict";function nearestPointOnLine(e,t,r){void 0===r&&(r={});var i=helpers_1.point([1/0,1/0],{dist:1/0}),n=0;return meta_1.flattenEach(e,function(e){for(var s=invariant_1.getCoords(e),a=0;a<s.length-1;a++){var o=helpers_1.point(s[a]);o.properties.dist=distance_1.default(t,o,r);var p=helpers_1.point(s[a+1]);p.properties.dist=distance_1.default(t,p,r);var d=distance_1.default(o,p,r),u=Math.max(o.properties.dist,p.properties.dist),l=bearing_1.default(o,p),_=destination_1.default(t,u,l+90,r),f=destination_1.default(t,u,l-90,r),c=line_intersect_1.default(helpers_1.lineString([_.geometry.coordinates,f.geometry.coordinates]),helpers_1.lineString([o.geometry.coordinates,p.geometry.coordinates])),g=null;c.features.length>0&&(g=c.features[0],g.properties.dist=distance_1.default(t,g,r),g.properties.location=n+distance_1.default(o,g,r)),o.properties.dist<i.properties.dist&&(i=o,i.properties.index=a,i.properties.location=n),p.properties.dist<i.properties.dist&&(i=p,i.properties.index=a+1,i.properties.location=n+d),g&&g.properties.dist<i.properties.dist&&(i=g,i.properties.index=a),n+=d}}),i}Object.defineProperty(exports,"__esModule",{value:!0});var bearing_1=require("@turf/bearing"),distance_1=require("@turf/distance"),destination_1=require("@turf/destination"),line_intersect_1=require("@turf/line-intersect"),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=nearestPointOnLine;
},{"@turf/bearing":3,"@turf/destination":14,"@turf/distance":16,"@turf/helpers":18,"@turf/invariant":27,"@turf/line-intersect":19,"@turf/meta":25}],27:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{"@turf/helpers":18,"dup":4}],28:[function(require,module,exports){
function isUndefinedOrNull(e){return null===e||void 0===e}function isBuffer(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}function objEquiv(e,t,r){var n,i;if(isUndefinedOrNull(e)||isUndefinedOrNull(t))return!1;if(e.prototype!==t.prototype)return!1;if(isArguments(e))return!!isArguments(t)&&(e=pSlice.call(e),t=pSlice.call(t),deepEqual(e,t,r));if(isBuffer(e)){if(!isBuffer(t))return!1;if(e.length!==t.length)return!1;for(n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}try{var u=objectKeys(e),o=objectKeys(t)}catch(e){return!1}if(u.length!=o.length)return!1;for(u.sort(),o.sort(),n=u.length-1;n>=0;n--)if(u[n]!=o[n])return!1;for(n=u.length-1;n>=0;n--)if(i=u[n],!deepEqual(e[i],t[i],r))return!1;return typeof e==typeof t}var pSlice=Array.prototype.slice,objectKeys=require("./lib/keys.js"),isArguments=require("./lib/is_arguments.js"),deepEqual=module.exports=function(e,t,r){return r||(r={}),e===t||(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=typeof e&&"object"!=typeof t?r.strict?e===t:e==t:objEquiv(e,t,r))};
},{"./lib/is_arguments.js":29,"./lib/keys.js":30}],29:[function(require,module,exports){
function supported(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function unsupported(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}var supportsArgumentsClass="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();exports=module.exports=supportsArgumentsClass?supported:unsupported,exports.supported=supported,exports.unsupported=unsupported;
},{}],30:[function(require,module,exports){
function shim(e){var s=[];for(var t in e)s.push(t);return s}exports=module.exports="function"==typeof Object.keys?Object.keys:shim,exports.shim=shim;
},{}],31:[function(require,module,exports){
function explode(e){return e.coordinates.map(function(t){return{type:e.type.replace("Multi",""),coordinates:t}})}function sameLength(e,t){return e.hasOwnProperty("coordinates")?e.coordinates.length===t.coordinates.length:e.length===t.length}function objectComparator(e,t){return deepEqual(e,t,{strict:!0})}var deepEqual=require("deep-equal"),Equality=function(e){this.precision=e&&e.precision?e.precision:17,this.direction=!(!e||!e.direction)&&e.direction,this.pseudoNode=!(!e||!e.pseudoNode)&&e.pseudoNode,this.objectComparator=e&&e.objectComparator?e.objectComparator:objectComparator};Equality.prototype.compare=function(e,t){if(e.type!==t.type||!sameLength(e,t))return!1;switch(e.type){case"Point":return this.compareCoord(e.coordinates,t.coordinates);case"LineString":return this.compareLine(e.coordinates,t.coordinates,0,!1);case"Polygon":return this.comparePolygon(e,t);case"Feature":return this.compareFeature(e,t);default:if(0===e.type.indexOf("Multi")){var o=this,r=explode(e),i=explode(t);return r.every(function(e){return this.some(function(t){return o.compare(e,t)})},i)}}return!1},Equality.prototype.compareCoord=function(e,t){if(e.length!==t.length)return!1;for(var o=0;o<e.length;o++)if(e[o].toFixed(this.precision)!==t[o].toFixed(this.precision))return!1;return!0},Equality.prototype.compareLine=function(e,t,o,r){if(!sameLength(e,t))return!1;var i=this.pseudoNode?e:this.removePseudo(e),n=this.pseudoNode?t:this.removePseudo(t);if(!r||this.compareCoord(i[0],n[0])||(n=this.fixStartIndex(n,i))){var a=this.compareCoord(i[o],n[o]);return this.direction||a?this.comparePath(i,n):!!this.compareCoord(i[o],n[n.length-(1+o)])&&this.comparePath(i.slice().reverse(),n)}},Equality.prototype.fixStartIndex=function(e,t){for(var o,r=-1,i=0;i<e.length;i++)if(this.compareCoord(e[i],t[0])){r=i;break}return r>=0&&(o=[].concat(e.slice(r,e.length),e.slice(1,r+1))),o},Equality.prototype.comparePath=function(e,t){var o=this;return e.every(function(e,t){return o.compareCoord(e,this[t])},t)},Equality.prototype.comparePolygon=function(e,t){if(this.compareLine(e.coordinates[0],t.coordinates[0],1,!0)){var o=e.coordinates.slice(1,e.coordinates.length),r=t.coordinates.slice(1,t.coordinates.length),i=this;return o.every(function(e){return this.some(function(t){return i.compareLine(e,t,1,!0)})},r)}return!1},Equality.prototype.compareFeature=function(e,t){return!(e.id!==t.id||!this.objectComparator(e.properties,t.properties)||!this.compareBBox(e,t))&&this.compare(e.geometry,t.geometry)},Equality.prototype.compareBBox=function(e,t){return!!(!e.bbox&&!t.bbox||e.bbox&&t.bbox&&this.compareCoord(e.bbox,t.bbox))},Equality.prototype.removePseudo=function(e){return e},module.exports=Equality;
},{"deep-equal":28}],32:[function(require,module,exports){
function geojsonRbush(r){var e=rbush(r);return e.insert=function(r){if("Feature"!==r.type)throw new Error("invalid feature");return r.bbox=r.bbox?r.bbox:turfBBox(r),rbush.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach(function(r){if("Feature"!==r.type)throw new Error("invalid features");r.bbox=r.bbox?r.bbox:turfBBox(r),e.push(r)}):featureEach(r,function(r){if("Feature"!==r.type)throw new Error("invalid features");r.bbox=r.bbox?r.bbox:turfBBox(r),e.push(r)}),rbush.prototype.load.call(this,e)},e.remove=function(r,e){if("Feature"!==r.type)throw new Error("invalid feature");return r.bbox=r.bbox?r.bbox:turfBBox(r),rbush.prototype.remove.call(this,r,e)},e.clear=function(){return rbush.prototype.clear.call(this)},e.search=function(r){var e=rbush.prototype.search.call(this,this.toBBox(r));return featureCollection(e)},e.collides=function(r){return rbush.prototype.collides.call(this,this.toBBox(r))},e.all=function(){var r=rbush.prototype.all.call(this);return featureCollection(r)},e.toJSON=function(){return rbush.prototype.toJSON.call(this)},e.fromJSON=function(r){return rbush.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;if(r.bbox)e=r.bbox;else if(Array.isArray(r)&&4===r.length)e=r;else if(Array.isArray(r)&&6===r.length)e=[r[0],r[1],r[3],r[4]];else if("Feature"===r.type)e=turfBBox(r);else{if("FeatureCollection"!==r.type)throw new Error("invalid geojson");e=turfBBox(r)}return{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}var rbush=require("rbush"),helpers=require("@turf/helpers"),meta=require("@turf/meta"),turfBBox=require("@turf/bbox").default,featureEach=meta.featureEach,coordEach=meta.coordEach,polygon=helpers.polygon,featureCollection=helpers.featureCollection;module.exports=geojsonRbush,module.exports.default=geojsonRbush;
},{"@turf/bbox":2,"@turf/helpers":18,"@turf/meta":25,"rbush":34}],33:[function(require,module,exports){
!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):t.quickselect=o()}(this,function(){"use strict";function t(t,e,f,r,i){o(t,e,f||0,r||t.length-1,i||n)}function o(t,n,f,r,i){for(;r>f;){if(r-f>600){var u=r-f+1,a=n-f+1,c=Math.log(u),h=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*h*(u-h)/u)*(a-u/2<0?-1:1);o(t,n,Math.max(f,Math.floor(n-a*h/u+d)),Math.min(r,Math.floor(n+(u-a)*h/u+d)),i)}var l=t[n],s=f,M=r;for(e(t,f,n),i(t[r],l)>0&&e(t,f,r);s<M;){for(e(t,s,M),s++,M--;i(t[s],l)<0;)s++;for(;i(t[M],l)>0;)M--}0===i(t[f],l)?e(t,f,M):(M++,e(t,M,r)),M<=n&&(f=M+1),n<=M&&(r=M-1)}}function e(t,o,e){var n=t[o];t[o]=t[e],t[e]=n}function n(t,o){return t<o?-1:t>o?1:0}return t});
},{}],34:[function(require,module,exports){
"use strict";function rbush(t,i){if(!(this instanceof rbush))return new rbush(t,i);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),i&&this._initFormat(i),this.clear()}function findItem(t,i,n){if(!n)return i.indexOf(t);for(var e=0;e<i.length;e++)if(n(t,i[e]))return e;return-1}function calcBBox(t,i){distBBox(t,0,t.children.length,i,t)}function distBBox(t,i,n,e,r){r||(r=createNode(null)),r.minX=1/0,r.minY=1/0,r.maxX=-1/0,r.maxY=-1/0;for(var a,h=i;h<n;h++)a=t.children[h],extend(r,t.leaf?e(a):a);return r}function extend(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function compareNodeMinX(t,i){return t.minX-i.minX}function compareNodeMinY(t,i){return t.minY-i.minY}function bboxArea(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function bboxMargin(t){return t.maxX-t.minX+(t.maxY-t.minY)}function enlargedArea(t,i){return(Math.max(i.maxX,t.maxX)-Math.min(i.minX,t.minX))*(Math.max(i.maxY,t.maxY)-Math.min(i.minY,t.minY))}function intersectionArea(t,i){var n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),r=Math.min(t.maxX,i.maxX),a=Math.min(t.maxY,i.maxY);return Math.max(0,r-n)*Math.max(0,a-e)}function contains(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function intersects(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function createNode(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function multiSelect(t,i,n,e,r){for(var a,h=[i,n];h.length;)n=h.pop(),i=h.pop(),n-i<=e||(a=i+Math.ceil((n-i)/e/2)*e,quickselect(t,a,i,n,r),h.push(i,a,a,n))}module.exports=rbush,module.exports.default=rbush;var quickselect=require("quickselect");rbush.prototype={all:function(){return this._all(this.data,[])},search:function(t){var i=this.data,n=[],e=this.toBBox;if(!intersects(t,i))return n;for(var r,a,h,o,s=[];i;){for(r=0,a=i.children.length;r<a;r++)h=i.children[r],o=i.leaf?e(h):h,intersects(t,o)&&(i.leaf?n.push(h):contains(t,o)?this._all(h,n):s.push(h));i=s.pop()}return n},collides:function(t){var i=this.data,n=this.toBBox;if(!intersects(t,i))return!1;for(var e,r,a,h,o=[];i;){for(e=0,r=i.children.length;e<r;e++)if(a=i.children[e],h=i.leaf?n(a):a,intersects(t,h)){if(i.leaf||contains(t,h))return!0;o.push(a)}i=o.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0,n=t.length;i<n;i++)this.insert(t[i]);return this}var e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){var r=this.data;this.data=e,e=r}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=createNode([]),this},remove:function(t,i){if(!t)return this;for(var n,e,r,a,h=this.data,o=this.toBBox(t),s=[],c=[];h||s.length;){if(h||(h=s.pop(),e=s[s.length-1],n=c.pop(),a=!0),h.leaf&&-1!==(r=findItem(t,h.children,i)))return h.children.splice(r,1),s.push(h),this._condense(s),this;a||h.leaf||!contains(h,o)?e?(n++,h=e.children[n],a=!1):h=null:(s.push(h),c.push(n),n=0,e=h,h=h.children[0])}return this},toBBox:function(t){return t},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},_build:function(t,i,n,e){var r,a=n-i+1,h=this._maxEntries;if(a<=h)return r=createNode(t.slice(i,n+1)),calcBBox(r,this.toBBox),r;e||(e=Math.ceil(Math.log(a)/Math.log(h)),h=Math.ceil(a/Math.pow(h,e-1))),r=createNode([]),r.leaf=!1,r.height=e;var o,s,c,l,u=Math.ceil(a/h),m=u*Math.ceil(Math.sqrt(h));for(multiSelect(t,i,n,m,this.compareMinX),o=i;o<=n;o+=m)for(c=Math.min(o+m-1,n),multiSelect(t,o,c,u,this.compareMinY),s=o;s<=c;s+=u)l=Math.min(s+u-1,c),r.children.push(this._build(t,s,l,e-1));return calcBBox(r,this.toBBox),r},_chooseSubtree:function(t,i,n,e){for(var r,a,h,o,s,c,l,u;;){if(e.push(i),i.leaf||e.length-1===n)break;for(l=u=1/0,r=0,a=i.children.length;r<a;r++)h=i.children[r],s=bboxArea(h),c=enlargedArea(t,h)-s,c<u?(u=c,l=s<l?s:l,o=h):c===u&&s<l&&(l=s,o=h);i=o||i.children[0]}return i},_insert:function(t,i,n){var e=this.toBBox,r=n?t:e(t),a=[],h=this._chooseSubtree(r,this.data,i,a);for(h.children.push(t),extend(h,r);i>=0&&a[i].children.length>this._maxEntries;)this._split(a,i),i--;this._adjustParentBBoxes(r,a,i)},_split:function(t,i){var n=t[i],e=n.children.length,r=this._minEntries;this._chooseSplitAxis(n,r,e);var a=this._chooseSplitIndex(n,r,e),h=createNode(n.children.splice(a,n.children.length-a));h.height=n.height,h.leaf=n.leaf,calcBBox(n,this.toBBox),calcBBox(h,this.toBBox),i?t[i-1].children.push(h):this._splitRoot(n,h)},_splitRoot:function(t,i){this.data=createNode([t,i]),this.data.height=t.height+1,this.data.leaf=!1,calcBBox(this.data,this.toBBox)},_chooseSplitIndex:function(t,i,n){var e,r,a,h,o,s,c,l;for(s=c=1/0,e=i;e<=n-i;e++)r=distBBox(t,0,e,this.toBBox),a=distBBox(t,e,n,this.toBBox),h=intersectionArea(r,a),o=bboxArea(r)+bboxArea(a),h<s?(s=h,l=e,c=o<c?o:c):h===s&&o<c&&(c=o,l=e);return l},_chooseSplitAxis:function(t,i,n){var e=t.leaf?this.compareMinX:compareNodeMinX,r=t.leaf?this.compareMinY:compareNodeMinY;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,r)&&t.children.sort(e)},_allDistMargin:function(t,i,n,e){t.children.sort(e);var r,a,h=this.toBBox,o=distBBox(t,0,i,h),s=distBBox(t,n-i,n,h),c=bboxMargin(o)+bboxMargin(s);for(r=i;r<n-i;r++)a=t.children[r],extend(o,t.leaf?h(a):a),c+=bboxMargin(o);for(r=n-i-1;r>=i;r--)a=t.children[r],extend(s,t.leaf?h(a):a),c+=bboxMargin(s);return c},_adjustParentBBoxes:function(t,i,n){for(var e=n;e>=0;e--)extend(i[e],t)},_condense:function(t){for(var i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children,i.splice(i.indexOf(t[n]),1)):this.clear():calcBBox(t[n],this.toBBox)},_initFormat:function(t){var i=["return a"," - b",";"];this.compareMinX=new Function("a","b",i.join(t[0])),this.compareMinY=new Function("a","b",i.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};
},{"quickselect":33}],35:[function(require,module,exports){
module.exports={bboxPolygon:require("@turf/bbox-polygon").default,helpers:require("@turf/helpers"),meta:require("@turf/meta"),bbox:require("@turf/bbox").default,center:require("@turf/center").default,booleanContains:require("@turf/boolean-contains").default,booleanOverlap:require("@turf/boolean-overlap").default};
},{"@turf/bbox":2,"@turf/bbox-polygon":1,"@turf/boolean-contains":5,"@turf/boolean-overlap":7,"@turf/center":13,"@turf/helpers":18,"@turf/meta":25}]},{},[35])(35)
});


//# sourceMappingURL=bundle.map